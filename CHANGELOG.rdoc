= Changelog


== master

* FIXED: Change 'Task' to ActiveRecord::Base in method (closes #141).

* ADDED: Added activerecord-multiconditions.rb file to enable RubyGems single-line inclusion.

    require 'activerecord-multiconditions'

* CHANGED: MultiConditions.new now requires the first parameter to be the ActiveRecord model class. The new method ActiveRecord::Base#multiconditions is now the preferred way to to initialize a new MultiConditions instance.
    
    class Task < ActiveRecord::Base; end;
    Task::MultiConditions.new(Task) # too verbose
    Task.multiconditions            # preferred way

* CHANGED: Reorganized library structure. This package now declares a MultiConditions module that acts as a mixin for the ActiveRecord::Base class. Having MultiCondition class declared within a MultiConditions module is not really a perfect solution but - for now - I don't want to break BC renaming the GEM or the internal class. 


== Release 0.1.0

* Initial public release.
